diff --git a/examples/pxScene2d/external/dukluv/CMakeLists.txt b/examples/pxScene2d/external/dukluv/CMakeLists.txt
index 967b987..4afc8ab 100644
--- a/examples/pxScene2d/external/dukluv/CMakeLists.txt
+++ b/examples/pxScene2d/external/dukluv/CMakeLists.txt
@@ -1,7 +1,10 @@
-cmake_minimum_required(VERSION 2.8.9)
+cmake_minimum_required(VERSION 2.8)
 
 project (dukluv)
 
+set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -fpic")
+set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fpic")
+set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/build)
 include(duktape.cmake)
 include(uv.cmake)
 
@@ -23,6 +26,7 @@ add_library(duv
   src/uv_schema.c
   src/callbacks.c
   src/miniz.c
+  src/dns.c
 )
 
 
diff --git a/examples/pxScene2d/external/dukluv/src/duv.c b/examples/pxScene2d/external/dukluv/src/duv.c
index a2d2ca6..21a5312 100644
--- a/examples/pxScene2d/external/dukluv/src/duv.c
+++ b/examples/pxScene2d/external/dukluv/src/duv.c
@@ -13,6 +13,7 @@
 #include "fs.h"
 #include "misc.h"
 #include "miniz.h"
+#include "dns.h"
 
 static const duk_function_list_entry duv_funcs[] = {
   // loop.c
@@ -128,6 +129,9 @@ static const duk_function_list_entry duv_funcs[] = {
   // miniz.c
   {"inflate", duv_tinfl, 2},
   {"deflate", duv_tdefl, 2},
+  
+  {"dns_getaddrinfo", duv_getaddrinfo, 2},
+  {"dns_getnameinfo", duv_getnameinfo, 2},
 
   {NULL, NULL, 0},
 };
diff --git a/examples/pxScene2d/external/dukluv/src/main.c b/examples/pxScene2d/external/dukluv/src/main.c
index 8444138..797642a 100644
--- a/examples/pxScene2d/external/dukluv/src/main.c
+++ b/examples/pxScene2d/external/dukluv/src/main.c
@@ -1,6 +1,6 @@
 #include "duv.h"
 #include "misc.h"
-
+#include <string.h>
 static uv_loop_t loop;
 
 // Sync readfile using libuv APIs as an API function.
@@ -41,10 +41,11 @@ static duk_ret_t duv_loadfile(duk_context *ctx) {
   // TODO what about windows... will this work?
 
   fd = 0;
-  std::string path2 = "duk_modules/";
-  path2 += path;
+  char path2[1000] = "duk_modules/";
+  memset(path2,0,sizeof(path2));
+  strcat(path2,path);
 
-  if (uv_fs_open(&loop, &req, path2.c_str(), O_RDONLY, 0644, NULL) < 0) goto fail;
+  if (uv_fs_open(&loop, &req, path2, O_RDONLY, 0644, NULL) < 0) goto fail;
   uv_fs_req_cleanup(&req);
   fd = req.result;
   if (uv_fs_fstat(&loop, &req, fd, NULL) < 0) goto fail;
@@ -69,7 +70,7 @@ static duk_ret_t duv_loadfile(duk_context *ctx) {
   if (fd) uv_fs_close(&loop, &req, fd, NULL);
   uv_fs_req_cleanup(&req);
   
-  duk_error(ctx, DUK_ERR_ERROR, "%s: %s: %s", uv_err_name(req.result), uv_strerror(req.result), path2.c_str());
+  duk_error(ctx, DUK_ERR_ERROR, "%s: %s: %s", uv_err_name(req.result), uv_strerror(req.result), path2);
 }
 
 struct duv_list {
diff --git a/examples/pxScene2d/external/dukluv/uv.cmake b/examples/pxScene2d/external/dukluv/uv.cmake
index c638aeb..678ca19 100644
--- a/examples/pxScene2d/external/dukluv/uv.cmake
+++ b/examples/pxScene2d/external/dukluv/uv.cmake
@@ -25,7 +25,7 @@
 
 include(CheckTypeSize)
 
-cmake_minimum_required(VERSION 2.8.9)
+cmake_minimum_required(VERSION 2.8)
 
 set(LIBUVDIR ${CMAKE_CURRENT_LIST_DIR}/lib/uv)
 
@@ -121,7 +121,6 @@ else()
     ${LIBUVDIR}/src/unix/timer.c
     ${LIBUVDIR}/src/unix/tty.c
     ${LIBUVDIR}/src/unix/udp.c
-    ${LIBUVDIR}/src/unix/pthread-barrier.c
   )
 endif()
 
@@ -158,6 +157,7 @@ if(APPLE)
     -D=_DARWIN_USE_64_BIT_INODE
   )
   set(SOURCES ${SOURCES}
+    ${LIBUVDIR}/src/unix/pthread-barrier.c
     ${LIBUVDIR}/src/unix/proctitle.c
     ${LIBUVDIR}/src/unix/darwin.c
     ${LIBUVDIR}/src/unix/fsevents.c
